package com.markovsky.calculator;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MissingServletRequestParameterException;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(MissingServletRequestParameterException.class)
    public ResponseEntity<CustomErrorResponse> handleMissingParams(MissingServletRequestParameterException ex) {
        String paramName = ex.getParameterName();
        String message = String.format("–ë—Ä–∞—Ç–∏—à–∫–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä '%s' –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω! –ù–µ –∑–∞–±—ã–≤–∞–π –µ–≥–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å üòé", paramName);

        CustomErrorResponse error = new CustomErrorResponse(
                HttpStatus.BAD_REQUEST.value(),
                "Missing Parameter",
                message
        );

        return new ResponseEntity<>(error, HttpStatus.BAD_REQUEST);
    }

    @ExceptionHandler(InvalidParameterException.class)
    public ResponseEntity<CustomErrorResponse> handleEmptyParams(InvalidParameterException ex) {
        CustomErrorResponse error = new CustomErrorResponse(
                HttpStatus.BAD_REQUEST.value(),
                "Empty Parameter",
                "–ë—Ä–∞—Ç–∏—à–∫–∞, " + ex.getMessage() + " –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±–∞ —á–∏—Å–ª–∞! üî¢"
        );
        return new ResponseEntity<>(error, HttpStatus.BAD_REQUEST);
    }

    @ExceptionHandler(NumberFormatException.class)
    public ResponseEntity<CustomErrorResponse> handleNumberFormatException() {
        CustomErrorResponse error = new CustomErrorResponse(
                HttpStatus.BAD_REQUEST.value(),
                "Invalid Number",
                "–¶–µ–ª—ã–µ —á–∏—Å–ª–∞ –Ω—É–∂–Ω—ã, –±—Ä–∞—Ç! –ù–∏–∫–∞–∫–∏—Ö –±—É–∫–≤ –∏–ª–∏ –¥—Ä–æ–±–µ–π. –ü—Ä–∏–º–µ—Ä: ?num1=5&num2=10"
        );
        return new ResponseEntity<>(error, HttpStatus.BAD_REQUEST);
    }

}
